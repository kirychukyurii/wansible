{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "VAR_DOMAIN_ID",
      "type": "constant",
      "label": "domain_id",
      "value": "1",
      "description": ""
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.2"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1661174726011,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 14,
      "options": {
        "content": "<div style=\"text-align: center;\">          \n  <span style=\"font-size: xx-large;\">${agent} </span>\n</div>",
        "mode": "html"
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__time(time_column),\n  value1\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "light-orange",
                "value": 65
              },
              {
                "color": "semi-dark-red",
                "value": 85
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "lcd-gauge"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Cause"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 393
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 11,
        "x": 0,
        "y": 2
      },
      "id": 8,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select c.name \"Cause\",\n       ((extract(epoch from\n           case when a.status = 'pause' and a.status_payload = c.name then\n           now() - a.last_state_change + coalesce(tp.duration, interval '0')\n           else coalesce(tp.duration, interval '0') end) / 60)::double precision / limit_min) * 100 \"Time\"\nfrom call_center.cc_pause_cause c\n         inner join  call_center.cc_agent a on a.id = $agent_id\n         left join call_center.cc_agent_today_pause_cause tp on tp.cause = c.name and tp.id = a.id\nwhere c.domain_id = 1 and a.domain_id = c.domain_id\norder by c.name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Breaks for today",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "custom.width",
                "value": 193
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Direction"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 138
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Queue"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 288
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Number"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 164
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 131
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 21,
        "w": 13,
        "x": 11,
        "y": 2
      },
      "id": 10,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Queue"
          }
        ]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ch.created_at \"Time\",\n       ch.direction \"Direction\",\n       ch.destination \"Number\",\n       q.name \"Queue\",\n       extract(epoch  from ch.hangup_at - ch.created_at)::int8 \"Duration\",\n       ch.cause \"Hangup cause\"\nfrom call_center.cc_calls_history ch\n    left join call_center.cc_queue q on q.id = ch.queue_id\nwhere ch.domain_id = $domain_id\n  and ch.user_id = (select user_id from call_center.cc_agent a where a.id = $agent_id)\n  and ch.created_at between $__timeFrom() and $__timeTo()\norder by ch.created_at desc\nlimit 200;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Calls",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 11,
        "x": 0,
        "y": 11
      },
      "id": 12,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ac.state \"Status\",\n       ac.joined_at \"Sign in\",\n       ac.joined_at + ac.duration \"Sign out\",\n       extract(epoch from ac.duration) \"Duration\"\nfrom call_center.cc_agent_state_history ac\nwhere ac.agent_id = $agent_id\n    and joined_at between $__timeFrom() and $__timeTo()\norder by ac.joined_at desc\nlimit 5000",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Status log",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "select coalesce(u.name, u.username)  AS __text, a.id AS __value from call_center.cc_agent a inner join directory.wbt_user u on u.id = a.user_id  where dc= $domain_id  limit 1000",
        "hide": 0,
        "includeAll": false,
        "label": "Agent",
        "multi": false,
        "name": "agent_id",
        "options": [],
        "query": "select coalesce(u.name, u.username)  AS __text, a.id AS __value from call_center.cc_agent a inner join directory.wbt_user u on u.id = a.user_id  where dc= $domain_id  limit 1000",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "name": "domain_id",
        "query": "${VAR_DOMAIN_ID}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_DOMAIN_ID}",
          "text": "${VAR_DOMAIN_ID}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_DOMAIN_ID}",
            "text": "${VAR_DOMAIN_ID}",
            "selected": false
          }
        ]
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "select coalesce(u.name, u.username) as name\n/*       u.extension,\n       u.dnd,\n       t.name as team_name,\n       aud.names as auditors,\n       sup.names as supervisors,\n       a.progressive_count,\n       a.chat_count */\nfrom call_center.cc_agent a\n    inner join directory.wbt_user u on u.id = a.user_id\n    left join call_center.cc_team t on t.id = a.team_id\n    left join lateral (\n        select string_agg(coalesce(aud.name, aud.username), ',') as names\n        from directory.wbt_user aud\n        where aud.id = any(a.auditor_ids)\n\n    ) aud on true\n    left join lateral (\n        select string_agg(aud.\"user\"->>'name', ',') as names\n        from call_center.cc_agent_with_user aud\n        where aud.id = any(a.supervisor_ids)\n    ) sup on true\nwhere a.domain_id = $domain_id and a.id = $agent_id",
        "hide": 2,
        "includeAll": true,
        "multi": true,
        "name": "agent",
        "options": [],
        "query": "select coalesce(u.name, u.username) as name\n/*       u.extension,\n       u.dnd,\n       t.name as team_name,\n       aud.names as auditors,\n       sup.names as supervisors,\n       a.progressive_count,\n       a.chat_count */\nfrom call_center.cc_agent a\n    inner join directory.wbt_user u on u.id = a.user_id\n    left join call_center.cc_team t on t.id = a.team_id\n    left join lateral (\n        select string_agg(coalesce(aud.name, aud.username), ',') as names\n        from directory.wbt_user aud\n        where aud.id = any(a.auditor_ids)\n\n    ) aud on true\n    left join lateral (\n        select string_agg(aud.\"user\"->>'name', ',') as names\n        from call_center.cc_agent_with_user aud\n        where aud.id = any(a.supervisor_ids)\n    ) sup on true\nwhere a.domain_id = $domain_id and a.id = $agent_id",
        "refresh": 1,
        "regex": ".*",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now/d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Agent",
  "uid": "IKFzU5n7z",
  "version": 1,
  "weekStart": ""
}