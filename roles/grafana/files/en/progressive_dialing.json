{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "VAR_DOMAIN_ID",
      "type": "constant",
      "label": "domain_id",
      "value": "1",
      "description": ""
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.2"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1661174784919,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "AHT"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Agent's ASA"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Member's ASA"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Agent"
            },
            "properties": [
              {
                "id": "custom.align",
                "value": "left"
              },
              {
                "id": "custom.width",
                "value": 259
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Обработано"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 2
                    },
                    {
                      "color": "#EAB839",
                      "value": 3
                    },
                    {
                      "color": "#27303100",
                      "value": 4
                    }
                  ]
                }
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Статус"
          }
        ]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    u.\"user\"->>'name' \"Agent\",\n    case a.status \n      when 'online'  then 1\n      when 'offline'  then 2\n      when 'pause'  then 3\n      else 4 end\n    as \"Status\",\n    t.notbr_cnt \"Member did not answer\",\n    t.member_answer \"Member answered\",\n    t.br_cnt \"Connected with agent\",\n    t.missed \"Missed\",\n    t.aht \"AHT\",\n    t.asa \"Agent's ASA\",\n    t.asa_m \"Member's ASA\"\nfrom (\n         select a.agent_id,\n                count(*) filter ( where a.bridged_at notnull )                                                  br_cnt,\n                count(*) filter ( where a.bridged_at isnull )                                                   notbr_cnt,\n                count(*) filter ( where mc.answered_at notnull and (mc.amd_result::text = 'HUMAN'::text OR mc.amd_result::text = 'NOTSURE'::text or mc.amd_result IS NULL) ) member_answer,\n                avg(extract(epoch from (coalesce(a.reporting_at, a.leaving_at) - a.bridged_at)))\n                filter ( where a.bridged_at notnull )                                                           aht,\n                count(*) filter ( where ac.id notnull and ac.bridged_at isnull )                               missed,\n                avg(extract(epoch from ac.answered_at - ac.created_at)) filter ( where ac.answered_at notnull ) asa,\n                avg(extract(epoch from mc.answered_at - mc.created_at)) filter ( where mc.answered_at notnull ) asa_m\n         from call_center.cc_member_attempt_history a\n                  left join call_center.cc_calls_history ac on ac.domain_id = $domain_id and ac.id = a.agent_call_id\n                  left join call_center.cc_calls_history mc on mc.domain_id = $domain_id and mc.id = a.member_call_id\n         where a.domain_id = $domain_id\n           and a.joined_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz \n           and a.queue_id in ($q)\n         group by 1\n     ) t\n    inner join call_center.cc_agent_with_user u on u.id = t.agent_id\n    left join call_center.cc_agent a on a.id = t.agent_id;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Agents",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Agent in a call"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 10,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Продолжительность"
          }
        ]
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select a.joined_at \"Время\",\n       a.destination->>'destination' as \"Number\",\n       a.state \"State\",\n       c.answered_at \"Answered\",\n       u.\"user\"->>'name' \"Agent\",\n       case when a.bridged_at notnull\n            then extract(epoch from coalesce(a.leaving_at, now()) - a.bridged_at)::int8\n            else 0 end \"Agent in a call\",\n       extract(epoch from now() - a.joined_at)::int8 \"Duration\",\n       r.name \"Resource\"\nfrom call_center.cc_member_attempt a\n    left join call_center.cc_outbound_resource r  on r.id = a.resource_id\n    left join call_center.cc_calls c on c.id = a.member_call_id\n    left join call_center.cc_agent_with_user u on u.id = a.agent_id\nwhere a.state != 'leaving' and a.queue_id in ($q)\norder by a.answered_at desc nulls last ;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Active calls",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 0,
        "y": 17
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    public.time_bucket('$__interval', a.joined_at::timestamptz) as time,\n    q.name as metric,\n    count(*) as value\nfrom call_center.cc_member_attempt_history a\n    left join call_center.cc_queue q on q.id = a.queue_id\nwhere a.domain_id = $domain_id\n    and a.joined_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz \n    and a.queue_id in($q)\ngroup by 1, 2\norder by 1, 2;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Queue calls",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 13,
        "y": 17
      },
      "id": 8,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "percent",
            "value"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time, count(*) as metric, ch.cause || ' (' || ch.sip_code || ')' as value\nfrom call_center.cc_calls_history ch\nwhere ch.domain_id = $domain_id\n  and ch.created_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz \n  and ch.queue_id in ($q)\ngroup by 1, 3;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Hangup causes",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "dark-orange",
                "value": 60
              },
              {
                "color": "dark-green",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Progress"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "lcd-gauge"
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "In work"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 110
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Waiting"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 103
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Queue"
            },
            "properties": [
              {
                "id": "custom.align",
                "value": "left"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 2,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Ожидает"
          }
        ]
      },
      "pluginVersion": "8.2.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select q.name \"Queue\",\n       a.cnt \"In work\",\n       coalesce(sum(qs.member_waiting), 0) \"Waiting\",\n       coalesce(sum(qs.member_count), 0) as \"Total\",\n       case when coalesce(sum(qs.member_count - qs.member_waiting)) > 0\n           then  (coalesce(sum(qs.member_count - qs.member_waiting), 0)::double precision / coalesce(sum(qs.member_count), 0)::double precision) * 100\n           else 100.0 end \"Progress\"\nfrom call_center.cc_queue q\n    left join call_center.cc_queue_statistics qs on qs.queue_id = q.id\n    left join call_center.cc_bucket b on b.id = qs.bucket_id\n    left join lateral (\n        select count(*) cnt\n        from call_center.cc_member_attempt a\n        where a.queue_id = q.id and a.state != 'leaving'\n    ) a on true\nwhere q.domain_id = $domain_id and q.id in ($q)\ngroup by 1,2, q.priority\norder by q.priority desc;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Information",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "dash"
  ],
  "templating": {
    "list": [
      {
        "hide": 2,
        "name": "domain_id",
        "query": "${VAR_DOMAIN_ID}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_DOMAIN_ID}",
          "text": "${VAR_DOMAIN_ID}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_DOMAIN_ID}",
            "text": "${VAR_DOMAIN_ID}",
            "selected": false
          }
        ]
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "select name __text, id __value\nfrom call_center.cc_queue q\nwhere q.domain_id = $domain_id and q.type = 4",
        "hide": 0,
        "includeAll": false,
        "label": "Queues",
        "multi": true,
        "name": "q",
        "options": [],
        "query": "select name __text, id __value\nfrom call_center.cc_queue q\nwhere q.domain_id = $domain_id and q.type = 4",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now/d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "Asia/Ho_Chi_Minh",
  "title": "Progressive dialing",
  "uid": "SD9XTh7nk",
  "version": 1,
  "weekStart": ""
}