{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "VAR_DOMAIN_ID",
      "type": "constant",
      "label": "domain_id",
      "value": "1",
      "description": ""
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.2"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1661174760517,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Used %"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "lcd-gauge"
              },
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-GrYlRd"
                }
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Имя"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 169
              },
              {
                "id": "custom.align",
                "value": "left"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Использовано"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 122
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Лимит"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 74
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select r.name \"Name\",\n       coalesce(a.cnt, 0) \"Used\",\n       r.\"limit\" \"Limit\",\n       coalesce((a.cnt * 100) / r.\"limit\", 0) \"Used %\"\nfrom call_center.cc_outbound_resource r\n    left join (\n        select a.resource_id, count(*) cnt\n        from call_center.cc_member_attempt a\n        where a.resource_id notnull and a.state != 'leaving'\n        group by 1\n    ) a on a.resource_id = r.id\nwhere r.domain_id = $domain_id and r.enabled\n    and r.id in (\n    select distinct oi.resource_id\n    from call_center.cc_queue_resource qr\n        inner join call_center.cc_outbound_resource_group og on og.id = qr.resource_group_id\n        inner join call_center.cc_outbound_resource_in_group oi on oi.group_id = og.id\n    where qr.queue_id in ($q)\n    )\norder by 4 desc, 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Resources",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Average duration"
            },
            "properties": [
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 60
              },
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 50
                    },
                    {
                      "color": "#EAB839",
                      "value": 80
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg response time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 40
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    },
                    {
                      "color": "#EAB839",
                      "value": 90
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Calls"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "dark-blue",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Answered"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "In work"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "dark-orange",
                      "value": null
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 15,
        "x": 9,
        "y": 0
      },
      "id": 10,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    count(*) \"Calls\",\n    (select count(*) from call_center.cc_member_attempt aa where aa.queue_id in ($q) and aa.state != 'leaving') \"In work\",\n    count(*) filter ( where ch.answered_at notnull and (ch.amd_result = 'HUMAN' or ch.amd_result isnull )) \"Answered\",\n    count(*) filter ( where t.parent_id notnull) \"Transfers\",\n    extract(epoch from avg(ch.answered_at - ch.created_at) filter ( where ch.answered_at notnull )) \"Avg response time\",\n    extract(epoch from avg(ch.hangup_at - ch.created_at) filter ( where ch.answered_at notnull )) \"Average duration\"\n    /*count(*) filter (where ch.payload->>'Promise' = 'SMS') \"SMS\",\n    count(*) filter (where ch.payload->>'Promise' = 'PromiseToday22') \"Today 22\",\n    count(*) filter (where ch.payload->>'Promise' = 'PromiseTomorrow16') \"Tomorrow 16\",\n    count(*) filter (where ch.payload->>'Promise' = 'PromiseDayAfterTomorrow16') \"DayAfterTomorrow 16\"*/\nfrom call_center.cc_member_attempt_history a\n    left join call_center.cc_calls_history ch on ch.id = a.member_call_id::varchar\n    left join call_center.cc_member_attempt_history t on t.parent_id = a.id\nwhere  a.domain_id = $domain_id\n  and a.joined_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz\n  and a.queue_id in ($q)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "custom.width",
                "value": 175
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "State"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 158
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Answered"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 144
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 167
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Resource"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 179
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Number"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 271
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 14,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.0.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select a.joined_at \"Time\",\n       a.destination->>'destination' as \"Number\",\n       c.state \"State\",\n       case when tq.name notnull then mq.name || ' > ' || tq.name else mq.name end \"Queue\",\n       c.answered_at \"Answered\",\n       extract(epoch from now() - a.joined_at) \"Duration\",\n       r.name \"Resource\",\n       u.user->>'name' \"Agent\"\nfrom call_center.cc_member_attempt a\n    left join call_center.cc_outbound_resource r  on r.id = a.resource_id\n    left join call_center.cc_calls c on c.id = a.member_call_id\n    left join call_center.cc_member_attempt t on t.parent_id = a.id\n    left join call_center.cc_agent_with_user u on u.id = t.agent_id\n    left join call_center.cc_queue mq on mq.id = a.queue_id\n    left join call_center.cc_queue tq on tq.id = t.queue_id\nwhere a.state != 'leaving' and a.queue_id in ($q)\norder by c.answered_at desc nulls last ;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Active calls",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 13,
        "x": 0,
        "y": 15
      },
      "id": 16,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.2.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    case when lag(q.name) over (order by q.priority, t.agent_id nulls first) = q.name then '' else q.name end \"Queue\",\n    coalesce(u.\"user\"->>'name', '') \"Agent\",\n    case when t.agent_id isnull then sum(t.c) over (partition by q.name) else t.c end as \"Answered\",\n    case when t.agent_id isnull then sum(t.cnt) over (partition by q.name)  end \"Transfer to the queue\",\n    t.aht_o \"Avg processing time\",\n    t.asa_o \"Avg response time\"\nfrom (\n    select h.queue_id,\n       hp.agent_id,\n       count(*) ccc,\n       count(*) filter ( where hp.bridged_at notnull ) c,\n       count(*) filter ( where hp.parent_id notnull ) cnt,\n       avg(extract(epoch from hp.bridged_at - hp.offering_at)) filter ( where hp.bridged_at notnull ) asa_o,\n       avg(extract(epoch from coalesce(hp.reporting_at, hp.leaving_at) - hp.bridged_at)) filter ( where hp.bridged_at notnull ) aht_o\n    from call_center.cc_member_attempt_history h\n        left join call_center.cc_member_attempt_history hp on hp.parent_id = h.id\n    where (h.domain_id = $domain_id::int8\n               and h.joined_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz \n               and h.queue_id in ($q)\n        )\n    group by 1, 2\n) t\n    inner join call_center.cc_queue q on q.id = t.queue_id\n    left join call_center.cc_agent_with_user u on u.id = t.agent_id\norder by q.priority, t.agent_id nulls first\n;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Transfers to the queues",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 11,
        "x": 13,
        "y": 15
      },
      "id": 8,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "value",
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select now() as time, t.value, t.metric\nfrom (\n         select count(*) as metric, ch.cause || ' (' || ch.sip_code || ')' as value\n         from call_center.cc_member_attempt_history a\n                  inner join call_center.cc_calls_history ch on ch.id = a.member_call_id\n         where a.domain_id = $domain_id\n           and a.joined_at between $__timeFrom()::timestamptz\n           and $__timeTo()::timestamptz\n           and a.queue_id in ($q)\n         group by 2\n     ) t\n     where t.metric notnull;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Hangup cause",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": -2,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 13,
        "x": 0,
        "y": 24
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    public.time_bucket('$__interval', a.joined_at::timestamptz) as time,\n    q.name as metric,\n    count(*) as value\nfrom call_center.cc_member_attempt_history a\n    left join call_center.cc_queue q on q.id = a.queue_id\nwhere a.domain_id = $domain_id\n    and a.joined_at between $__timeFrom()::timestamptz and $__timeTo()::timestamptz \n    and a.queue_id in($q)\ngroup by 1, 2\norder by 1, 2;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Queue calls",
      "transformations": [
        {
          "id": "reduce",
          "options": {
            "includeTimeField": false,
            "labelsToFields": false,
            "mode": "reduceFields",
            "reducers": []
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "dark-orange",
                "value": 50
              },
              {
                "color": "semi-dark-red",
                "value": 90
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Progress"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "lcd-gauge"
              },
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 11,
        "x": 13,
        "y": 24
      },
      "id": 2,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Прогресс"
          }
        ]
      },
      "pluginVersion": "8.2.5",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select q.name \"Queue\",\n       a.cnt \"In work\",\n       coalesce(sum(qs.member_waiting), 0) \"Pending\",\n       coalesce(sum(qs.member_count), 0) as \"Total\",\n       case when coalesce(sum(qs.member_count - qs.member_waiting)) > 0\n           then  (coalesce(sum(qs.member_count - qs.member_waiting), 0)::double precision / coalesce(sum(qs.member_count), 0)::double precision) * 100\n           else 100.0 end \"Progress\"\nfrom call_center.cc_queue q\n    left join call_center.cc_queue_statistics qs on qs.queue_id = q.id\n    left join call_center.cc_bucket b on b.id = qs.bucket_id\n    left join lateral (\n        select count(*) cnt\n        from call_center.cc_member_attempt a\n        where a.queue_id = q.id and a.state != 'leaving'\n    ) a on true\nwhere q.domain_id = $domain_id and q.id in ($q)\ngroup by 1,2, q.priority\norder by q.priority desc;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Information",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "dash"
  ],
  "templating": {
    "list": [
      {
        "hide": 2,
        "name": "domain_id",
        "query": "${VAR_DOMAIN_ID}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_DOMAIN_ID}",
          "text": "${VAR_DOMAIN_ID}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_DOMAIN_ID}",
            "text": "${VAR_DOMAIN_ID}",
            "selected": false
          }
        ]
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "select name __text, id __value\nfrom call_center.cc_queue q\nwhere q.domain_id = $domain_id and q.type = 2",
        "hide": 0,
        "includeAll": false,
        "label": "Queues",
        "multi": true,
        "name": "q",
        "options": [],
        "query": "select name __text, id __value\nfrom call_center.cc_queue q\nwhere q.domain_id = $domain_id and q.type = 2",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now/d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "IVR queue",
  "uid": "H2puSAnnz",
  "version": 1,
  "weekStart": ""
}